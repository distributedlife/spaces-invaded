!!!5
%html{lang: "en"}
  %head
    %meta{charset: "UTF-8"}
    %link{rel: "stylesheet", type: "text/css", href: "/client/stylesheet/lib.css"}
    %script{'data-main': "/client/javascript/controller.js", src: "/client/javascript/ext/require.js"}
    %script{src: "/client/javascript/config.js"}
  %body
    #controller
      .left.controller.joystick.joystickN
      .two.controller.joystick.joystick2lr
      .three.controller.joystick.joystick2ud
      .four.controller.joystick.joystick4
      .five.controller.joystick.joystick8
      .six.controller.joystick.directional2lr
      .seven.controller.joystick.directional2ud
      .eight.controller.joystick.directional4
      .nine.controller.joystick.directional8
      .right.controller.buttons.g1
        %a#b1{href: "#"}
      .rtwo.controller.buttons.g2
        %a#b1{href: "#"}
        %a#b2{href: "#"}
      .rthree.controller.buttons.g3
        %a#b1{href: "#"}
        %a#b2{href: "#"}
        %a#b3{href: "#"}
      .rfour.controller.buttons.g4
        %a#b1{href: "#"}
        %a#b2{href: "#"}
        %a#b3{href: "#"}
        %a#b4{href: "#"}
      .rfive.controller.buttons.g5
        %a#b1{href: "#"}
        %a#b2{href: "#"}
        %a#b3{href: "#"}
        %a#b4{href: "#"}
        %a#b5{href: "#"}
      .rsix.controller.buttons.g6.poly
        %a#b1{href: "#"}
        %a#b2{href: "#"}
        %a#b3{href: "#"}
        %a#b4{href: "#"}
        %a#b5{href: "#"}
        %a#b6{href: "#"}
      .rseven.controller.buttons.g6.rows
        %a#b1{href: "#"}
        %a#b2{href: "#"}
        %a#b3{href: "#"}
        %a#b4{href: "#"}
        %a#b5{href: "#"}
        %a#b6{href: "#"}
    %script{type: "text/javascript"}
    :javascript
      var apply_touch = function(control, x, y) {
        $(control).css("background-image", "radial-gradient(at "+x+"% "+y+"%, #000, #FFF)");
        $(control).css("background-image", "-moz-radial-gradient("+x+"% "+y+"%, circle contain, black 0%, white 100%");  
        $(control).css("background-image", "-ms-radial-gradient("+x+"% "+y+"%, circle contain, black 0%, white 100%");
        $(control).css("background-image", "-o-radial-gradient("+x+"% "+y+"%, circle contain, black 0%, white 100%");
      };

      function lineDistance( point1, point2 )
      {
        var xs = 0;
        var ys = 0;
       
        xs = point2.x - point1.x;
        xs = xs * xs;
       
        ys = point2.y - point1.y;
        ys = ys * ys;
       
        return Math.sqrt( xs + ys );
      }

      var snapPointToLine = function (p, a, b) {
        var ap1 = p.x-a.x,
          ap2 = p.y-a.y,
          ab1 = b.x-a.x,
          ab2 = b.y-a.y,
          mag = ab1*ab1 + ab2*ab2,
          dot = ap1*ab1 + ap2*ab2,
          t = dot/mag;

        if (t < 0) {
          return {x: a.x, y: a.y};
        } else if (t > 1) {
          return {x: b.x, y: b.y};
        } else {
          return {x: a.x+ab1*t, y: a.y+ab2*t};
        }
      }

      var round_to = function(n, b) {
        return Math.ceil(n/b) * b;
      }

      var constrain = function(value) {
        if (value <= 33) { return 0; }
        if (value > 33 && value <= 66) { return 50; }
        if (value > 66) { return 100; }
      };

      $(".joystickN").on('click', function(e) {
        var x = ~~ (e.layerX / e.target.clientWidth * 100);
        var y = ~~ (e.layerY / e.target.clientHeight * 100);
        
        apply_touch(this, x, y);
      });

      $(".joystick2lr").on('click', function(e) {
        var x = ~~ (e.layerX / e.target.clientWidth * 100);
        
        apply_touch(this, x, 50);
      });

      $(".directional2lr").on('click', function(e) {
        var x = ~~ (e.layerX / e.target.clientWidth * 100);
        
        apply_touch(this, constrain(x), 50);
      });

      $(".joystick2ud").on('click', function(e) {
        var y = ~~ (e.layerY / e.target.clientHeight * 100);
        
        apply_touch(this, 50, y);
      });

      $(".directional2ud").on('click', function(e) {
        var y = ~~ (e.layerY / e.target.clientHeight * 100);
        
        apply_touch(this, 50, constrain(y));
      });

      $(".joystick4").on('click', function(e) {
        var x = ~~ (e.layerX / e.target.clientWidth * 100);
        var y = ~~ (e.layerY / e.target.clientHeight * 100);

        var x_dist_a = Math.abs(x - 50);
        var y_dist_a = Math.abs(y - 50);

        if (x_dist_a < y_dist_a) {
          x = 50;
        } else {
          y = 50;
        }
        
        apply_touch(this, x, y);
      });

      $(".directional4").on('click', function(e) {
        var x = ~~ (e.layerX / e.target.clientWidth * 100);
        var y = ~~ (e.layerY / e.target.clientHeight * 100);

        var x_dist_a = Math.abs(x - 50);
        var y_dist_a = Math.abs(y - 50);

        if (x_dist_a < y_dist_a) {
          x = 50;
        } else {
          y = 50;
        }
        
        apply_touch(this, constrain(x), constrain(y));
      });

      $(".joystick8").on('click', function(e) {
        var x = ~~ (e.layerX / e.target.clientWidth * 100);
        var y = ~~ (e.layerY / e.target.clientHeight * 100);

        var point = {x: x, y: y};
        var l_tl_br = snapPointToLine(point, {x: 0, y: 0}, {x:100, y: 100});
        var l_l_r = snapPointToLine(point, {x: 0, y: 50}, {x:100, y: 50});
        var l_t_b = snapPointToLine(point, {x: 50, y: 0}, {x:50, y: 100});
        var l_bl_tr = snapPointToLine(point, {x: 0, y: 100}, {x:100, y: 0});

        var ld_tl_br = lineDistance(point, l_tl_br);
        var ld_l_r = lineDistance(point, l_l_r);
        var ld_t_b = lineDistance(point, l_t_b);
        var ld_bl_tr = lineDistance(point, l_bl_tr);

        var array = [
          {d: ld_tl_br, p: l_tl_br},
          {d: ld_l_r, p: l_l_r},
          {d: ld_t_b, p: l_t_b},
          {d: ld_bl_tr, p: l_bl_tr}
        ];
        
        array = array.sort(function(a, b) {
          return a.d - b.d;
        });
        
        apply_touch(this, array[0].p.x, array[0].p.y);
      });

      $(".directional8").on('click', function(e) {
        var x = ~~ (e.layerX / e.target.clientWidth * 100);
        var y = ~~ (e.layerY / e.target.clientHeight * 100);

        var point = {x: x, y: y};
        var l_tl_br = snapPointToLine(point, {x: 0, y: 0}, {x:100, y: 100});
        var l_l_r = snapPointToLine(point, {x: 0, y: 50}, {x:100, y: 50});
        var l_t_b = snapPointToLine(point, {x: 50, y: 0}, {x:50, y: 100});
        var l_bl_tr = snapPointToLine(point, {x: 0, y: 100}, {x:100, y: 0});

        var ld_tl_br = lineDistance(point, l_tl_br);
        var ld_l_r = lineDistance(point, l_l_r);
        var ld_t_b = lineDistance(point, l_t_b);
        var ld_bl_tr = lineDistance(point, l_bl_tr);

        var array = [
          {d: ld_tl_br, p: l_tl_br},
          {d: ld_l_r, p: l_l_r},
          {d: ld_t_b, p: l_t_b},
          {d: ld_bl_tr, p: l_bl_tr}
        ];
        
        array = array.sort(function(a, b) {
          return a.d - b.d;
        });
        
        apply_touch(this, constrain(array[0].p.x), constrain(array[0].p.y));
      });

      $("#b1").on('click', function(e) { console.log("button1 clicked"); });
      $("#b2").on('click', function(e) { console.log("button2 clicked"); });
      $("#b3").on('click', function(e) { console.log("button3 clicked"); });
      $("#b4").on('click', function(e) { console.log("button4 clicked"); });
      $("#b5").on('click', function(e) { console.log("button5 clicked"); });
      $("#b6").on('click', function(e) { console.log("button6 clicked"); });